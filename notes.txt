- The Enron email database is processed from the initial untarred
  directory tree with email files at the leafs by using scripts in
  src/bash_scripts:

     Step 1: using createCleanEnronCollection.sh, create two sets of
       ffiles: one just the raw emails chunked into  
       50MB files, with separators in between, and a sister set with
       those messages cleaned up (numbers, special chars, URLs, email 
       headers removed). The raw set are called email<n>.txt, the latter
       email<n>_NoHeads.txt. They will appear in 
       src/echo_tree/Resources/EnronCollectionProcessed/EnronRaw, and
       src/echo_tree/Resources/EnronCollectionProcessed/EnronCleaned, and
       Assumption: collection is in $HOME/Project/Dreslconsulting/Data/Enron/enron_mail_20110402/maildir/

           ./createCleanEnronCollection.sh 

     Step2: using tokenizeCleanEmails.sh, create arrays of tokens, one
       array for each sentence. Result will be in 
       src/echo_tree/Resources/EnronCollectionProcessed/EnronTokenized.

           ./tokenizeCleanEmails.sh

- The tokenization/sentence segmentation is done using Stanford NLP
  core. Separate package: echo_tree_sentence_seg. Use Eclipse over
  that Maven project to create target/emailTokenizer.jar. Copy that
  jar file into ... echo_tree/src/bash_scripts. (Already done in a
  cloned project.


- Enron data:
    o 531,422 messages
    o 2.624GB of total length

- Full run:
    Processed 517424 emails (1421.000 MB)
    Mon Sep  3 12:27:35 PDT 2012

- Stopwords 
  Selected from the 100 pre billion most frequent English words
  at http://en.wiktionary.org/wiki/Wiktionary:Frequency_lists/PG/2006/04/1-10000
the
of
and
to
in
I
that
was
his
he
it
is
for
as
had
on
at
by
this
are
an
has
its
a
these
mr




----------------------------------


- Using the Stanford NLP sentence segmenter and tokenizer:
     java edu.stanford.nlp.process.DocumentPreprocessor -file myDoc.txt > oneTokenizedSentencePerLine.txt
        -file for Text file, -html for HTML, etc.


Result of stringifying in JSON. This is what Python server
must generate and send over the WebSocket wire:
{
    "word": "great",
    "followWordObjs": [
        {
            "word": "keyboard",
            "followWordObjs": [
                {
                    "word": "shortcut",
                    "followWordObjs": [
                        {
                            "word": "lost",
                            "followWordObjs": []
                        },
                        {
                            "word": "woods",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "failure",
                    "followWordObjs": [
                        {
                            "word": "mode",
                            "followWordObjs": []
                        },
                        {
                            "word": "option",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "cleaner",
                    "followWordObjs": [
                        {
                            "word": "undocumented",
                            "followWordObjs": []
                        },
                        {
                            "word": "acidic",
                            "followWordObjs": []
                        }
                    ]
                }
            ]
        },
        {
            "word": "land",
            "followWordObjs": [
                {
                    "word": "free",
                    "followWordObjs": [
                        {
                            "word": "potatoes",
                            "followWordObjs": []
                        },
                        {
                            "word": "wheeling",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "reform",
                    "followWordObjs": [
                        {
                            "word": "school",
                            "followWordObjs": []
                        },
                        {
                            "word": "attempt",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "dispute",
                    "followWordObjs": [
                        {
                            "word": "defendant",
                            "followWordObjs": []
                        },
                        {
                            "word": "allegations",
                            "followWordObjs": []
                        }
                    ]
                }
            ]
        },
        {
            "word": "labor",
            "followWordObjs": [
                {
                    "word": "movement",
                    "followWordObjs": [
                        {
                            "word": "free",
                            "followWordObjs": []
                        },
                        {
                            "word": "therapy",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "union",
                    "followWordObjs": [
                        {
                            "word": "concerned",
                            "followWordObjs": []
                        },
                        {
                            "word": "denied",
                            "followWordObjs": []
                        }
                    ]
                },
                {
                    "word": "relations",
                    "followWordObjs": [
                        {
                            "word": "bad",
                            "followWordObjs": []
                        },
                        {
                            "word": "visit",
                            "followWordObjs": []
                        }
                    ]
                }
            ]
        }
    ]
}
----------------------

{"word": "echo", 
 "followWordObjs": [
	    		{"word": "chamber", 
	    		 "followWordObjs": [
	    		 		   {"word": "music", 
	    				    "followWordObjs": []}, 
	    				   {"word": "orchestra", 
	    				    "followWordObjs": []}
	    				   ]
	    	        }, 
	    		{"word": "measurement", 
	    		 "followWordObjs": []
	    		}, 
	    		{"word": "deafening", 
	    		 "followWordObjs": []}
		  ]
}
